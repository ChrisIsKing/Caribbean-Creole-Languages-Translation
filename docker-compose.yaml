version: '3.8'

services:
  django:
    container_name: cserver
    build: 
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app/
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - translation
    labels:
      - traefik.enable=true
      - traefik.docker.network=translation
      - traefik.http.services.translation.loadbalancer.server.port=${DJANGO_PORT}
      - traefik.http.routers.translation.rule=Host(`translation-backend.csclarke.com`)
      - traefik.http.routers.translation.tls=true
      - traefik.http.routers.translation.tls.certresolver=le
      - traefik.http.routers.translation.entrypoints=websecure

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${SQL_USER:-postgres}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-postgres}
      POSTGRES_DB: ${SQL_DATABASE:-translation}
      PGDATA: /data/postgres
    ports:
      - ${SQL_PORT}:${SQL_PORT}
    networks:
      - translation

  frontend:
    container_name: frontend
    build: 
      context: ./frontend
    volumes:
      - ./frontend:/frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    command: npm start
    networks:
      - translation
    labels:
      - traefik.enable=true
      - traefik.docker.network=translation
      - traefik.http.services.translation.loadbalancer.server.port=${FRONTEND_PORT}
      - traefik.http.routers.translation.rule=Host(`translation.csclarke.com`)
      - traefik.http.routers.translation.tls=true
      - traefik.http.routers.translation.tls.certresolver=le
      - traefik.http.routers.translation.entrypoints=websecure
  
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # let's encrypt
      - "--certificatesresolvers.le.acme.email=csclarke@csclarke.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      # redirects
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./letsencrypt:/letsencrypt
    networks:
      - translation

volumes:
  postgres_data:

networks:
  translation:
    driver: bridge